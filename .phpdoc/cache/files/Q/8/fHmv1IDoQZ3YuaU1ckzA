1678307518
waR3U4bTeM%3Aa029084d87bed4ea7e92eb7747e5a4c7-ddb04e1d7a10a440c4d440bac9041106
s:71268:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"ddb04e1d7a10a440c4d440bac9041106";s:39:" phpDocumentor\Reflection\Php\File name";s:68:"5f8b039375249c7550afe0a97b478640f08af3f864f215115e5261f2067c2b90.php";s:39:" phpDocumentor\Reflection\Php\File path";s:90:"var/cache/dev/twig/5f/5f8b039375249c7550afe0a97b478640f08af3f864f215115e5261f2067c2b90.php";s:41:" phpDocumentor\Reflection\Php\File source";s:31380:"<?php

use Twig\Environment;
use Twig\Error\LoaderError;
use Twig\Error\RuntimeError;
use Twig\Extension\SandboxExtension;
use Twig\Markup;
use Twig\Sandbox\SecurityError;
use Twig\Sandbox\SecurityNotAllowedTagError;
use Twig\Sandbox\SecurityNotAllowedFilterError;
use Twig\Sandbox\SecurityNotAllowedFunctionError;
use Twig\Source;
use Twig\Template;

/* user/account.html.twig */
class __TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1 extends Template
{
    private $source;
    private $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'title' => [$this, 'block_title'],
            'body' => [$this, 'block_body'],
        ];
    }

    protected function doGetParent(array $context)
    {
        // line 1
        return "base.html.twig";
    }

    protected function doDisplay(array $context, array $blocks = [])
    {
        $macros = $this->macros;
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->enter($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "user/account.html.twig"));

        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02 = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->enter($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "user/account.html.twig"));

        $this->parent = $this->loadTemplate("base.html.twig", "user/account.html.twig", 1);
        $this->parent->display($context, array_merge($this->blocks, $blocks));
        
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->leave($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof);

        
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->leave($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof);

    }

    // line 3
    public function block_title($context, array $blocks = [])
    {
        $macros = $this->macros;
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->enter($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "title"));

        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02 = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->enter($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "title"));

        echo "Profile of ";
        echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 3, $this->source); })()), "user", [], "any", false, false, false, 3), "FirstName", [], "any", false, false, false, 3), "html", null, true);
        echo "  ";
        echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 3, $this->source); })()), "user", [], "any", false, false, false, 3), "LastName", [], "any", false, false, false, 3), "html", null, true);
        
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->leave($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof);

        
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->leave($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof);

    }

    // line 5
    public function block_body($context, array $blocks = [])
    {
        $macros = $this->macros;
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->enter($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "body"));

        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02 = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->enter($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "body"));

        // line 6
        echo "
<!-- Header --> 
";
        // line 8
        if ($this->extensions['Symfony\Bridge\Twig\Extension\SecurityExtension']->isGranted("ROLE_ADMIN")) {
            echo " 
    ";
            // line 9
            $this->loadTemplate("site/header-admin.html.twig", "user/account.html.twig", 9)->display($context);
        } else {
            // line 11
            echo "    ";
            $this->loadTemplate("site/header-user.html.twig", "user/account.html.twig", 11)->display($context);
        }
        // line 13
        echo "
<!-- Start Breadcrumbbar -->                    
<div class=\"breadcrumbbar\">
    <div class=\"row align-items-center\">
        <div class=\"col-md-12 col-lg-12\">
            <h4 class=\"page-title\">My Account</h4>
            <div class=\"breadcrumb-list\">
                <ol class=\"breadcrumb\">
                    <li class=\"breadcrumb-item\"><a href=\"";
        // line 21
        echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("site");
        echo "\">Home</a></li>
                    <li class=\"breadcrumb-item active\" aria-current=\"page\">My Account</li>
                </ol>
            </div>
        </div>
    </div>          
</div>
<!-- End Breadcrumbbar -->

<br>
<!-- Show errors -->
";
        // line 32
        $context['_parent'] = $context;
        $context['_seq'] = twig_ensure_traversable(twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 32, $this->source); })()), "flashes", [], "any", false, false, false, 32));
        foreach ($context['_seq'] as $context["label"] => $context["messages"]) {
            // line 33
            echo "    ";
            $context['_parent'] = $context;
            $context['_seq'] = twig_ensure_traversable($context["messages"]);
            foreach ($context['_seq'] as $context["_key"] => $context["message"]) {
                // line 34
                echo "        <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">
            ";
                // line 35
                echo twig_escape_filter($this->env, $context["message"], "html", null, true);
                echo "
            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">
                <span aria-hidden=\"true\">&times;</span>
              </button>
        </div>
    ";
            }
            $_parent = $context['_parent'];
            unset($context['_seq'], $context['_iterated'], $context['_key'], $context['message'], $context['_parent'], $context['loop']);
            $context = array_intersect_key($context, $_parent) + $_parent;
        }
        $_parent = $context['_parent'];
        unset($context['_seq'], $context['_iterated'], $context['label'], $context['messages'], $context['_parent'], $context['loop']);
        $context = array_intersect_key($context, $_parent) + $_parent;
        // line 42
        echo "
<!-- Start Contentbar -->    
<div class=\"contentbar\">                
    <!-- Start row -->
    <div class=\"row\">
        <!-- Start col -->
        <div class=\"col-lg-5 col-xl-3\">
            <div class=\"card m-b-30\">
                <div class=\"card-header\">                                
                    <h5 class=\"card-title mb-0\">My Account</h5>
                </div>
                <div class=\"card-body\">
                    <div class=\"nav flex-column nav-pills\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">
                        <a class=\"nav-link mb-2 active\" id=\"v-pills-dashboard-tab\" data-toggle=\"pill\" href=\"#v-pills-dashboard\" role=\"tab\" aria-controls=\"v-pills-dashboard\" aria-selected=\"true\"><i class=\"ri-profile-fill mr-2\"></i>My profile</a>
                        <a class=\"nav-link mb-2\" id=\"v-pills-profile-tab\" data-toggle=\"pill\" href=\"#v-pills-profile\" role=\"tab\" aria-controls=\"v-pills-profile\" aria-selected=\"false\"><i class=\"ri-pencil-line mr-2\"></i>Edit Profile</a>
                        <a class=\"nav-link text-danger\" id=\"v-pills-logout-tab\" data-toggle=\"pill\" href=\"#v-pills-logout\" role=\"tab\" aria-controls=\"v-pills-logout\" aria-selected=\"false\"><i class=\"ri-shut-down-line mr-2\"></i>Logout</a>
                    </div>
                </div>
            </div>
        </div>
        <!-- End col -->
        <!-- Start col -->
        <div class=\"col-lg-7 col-xl-9\">
            <div class=\"tab-content\" id=\"v-pills-tabContent\">
                <!-- Dashboard Start -->
                <div class=\"tab-pane fade show active\" id=\"v-pills-dashboard\" role=\"tabpanel\" aria-labelledby=\"v-pills-dashboard-tab\">
                    <div class=\"card m-b-30\">
                        <div class=\"card-header\">                                
                            <h5 class=\"card-title mb-0\">Dashboard</h5>
                        </div>
                        <div class=\"card-body\">
                            <div class=\"profilebox py-4 text-center\">
                                <img src=\"";
        // line 74
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\AssetExtension']->getAssetUrl(("uploads/" . twig_get_attribute($this->env, $this->source, (isset($context["user"]) || array_key_exists("user", $context) ? $context["user"] : (function () { throw new RuntimeError('Variable "user" does not exist.', 74, $this->source); })()), "image", [], "any", false, false, false, 74))), "html", null, true);
        echo "\" class=\"img-fluid mb-3\" alt=\"profile\">
                                <div class=\"profilename\">
                                    <h5>";
        // line 76
        echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 76, $this->source); })()), "user", [], "any", false, false, false, 76), "FirstName", [], "any", false, false, false, 76), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 76, $this->source); })()), "user", [], "any", false, false, false, 76), "LastName", [], "any", false, false, false, 76), "html", null, true);
        echo "</h5>
                                    <p><b>Email:</b> ";
        // line 77
        echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 77, $this->source); })()), "user", [], "any", false, false, false, 77), "email", [], "any", false, false, false, 77), "html", null, true);
        echo "</p>
                                    <p><b>Phone number:</b> ";
        // line 78
        echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 78, $this->source); })()), "user", [], "any", false, false, false, 78), "phone", [], "any", false, false, false, 78), "html", null, true);
        echo "</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Dashboard End -->

                <!-- My Profile Start -->
                <div class=\"tab-pane fade\" id=\"v-pills-profile\" role=\"tabpanel\" aria-labelledby=\"v-pills-profile-tab\">
                    <div class=\"card m-b-30\">
                        <div class=\"card-header\">                                
                            <h5 class=\"card-title mb-0\">Edit Profile Informations</h5>
                        </div>
                        <div class=\"card-body\">
                            <form method=\"POST\" action=\"";
        // line 93
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getUrl("update_profile", ["id" => twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 93, $this->source); })()), "user", [], "any", false, false, false, 93), "id", [], "any", false, false, false, 93)]), "html", null, true);
        echo "\" enctype=\"multipart/form-data\">
                                <div class=\"form-row\">
                                    <div class=\"form-group col-md-6\">
                                        <label for=\"firstname\">First Name</label>
                                        <input type=\"text\" class=\"form-control\" id=\"firstname\" name=\"firstname\" value=\"";
        // line 97
        echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 97, $this->source); })()), "user", [], "any", false, false, false, 97), "firstname", [], "any", false, false, false, 97), "html", null, true);
        echo "\">
                                    </div>
                                    <div class=\"form-group col-md-6\">
                                        <label for=\"lastname\">Last Name</label>
                                        <input type=\"text\" class=\"form-control\" id=\"lastname\" name=\"lastname\" value=\"";
        // line 101
        echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 101, $this->source); })()), "user", [], "any", false, false, false, 101), "lastname", [], "any", false, false, false, 101), "html", null, true);
        echo "\">
                                    </div>
                                </div>
                                <div class=\"form-row\">
                                    <div class=\"form-group col-md-6\">
                                        <label for=\"phone\">Mobile Number</label>
                                        <input type=\"text\" class=\"form-control\" id=\"phone\" name=\"phone\" value=\"";
        // line 107
        echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 107, $this->source); })()), "user", [], "any", false, false, false, 107), "phone", [], "any", false, false, false, 107), "html", null, true);
        echo "\">
                                    </div>
                                    <div class=\"form-group col-md-6\">
                                        <label for=\"image\">Image</label>
                                        <input type=\"file\" class=\"form-control-file\" id=\"image\" name=\"image\" value=\"";
        // line 111
        echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 111, $this->source); })()), "user", [], "any", false, false, false, 111), "image", [], "any", false, false, false, 111), "html", null, true);
        echo "\">
                                    </div>
                                </div>
                                ";
        // line 124
        echo "                                <button type=\"submit\" class=\"btn btn-primary-rgba font-16\"><i class=\"ri-save-line mr-2\"></i>Update</button>
                            </form>
                        </div>
                    </div>
                </div>
                <!-- My Profile End -->

                <!-- My Logout Start -->
                <div class=\"tab-pane fade\" id=\"v-pills-logout\" role=\"tabpanel\" aria-labelledby=\"v-pills-logout-tab\">
                    <div class=\"card m-b-30\">
                        <div class=\"card-header\">                                
                            <h5 class=\"card-title mb-0\">Logout</h5>                                       
                        </div>
                        <div class=\"card-body\">
                            <div class=\"row justify-content-center\">
                                <div class=\"col-lg-6 col-xl-4\">
                                    <div class=\"logout-content text-center my-5\">
                                        <img src=\"";
        // line 141
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\AssetExtension']->getAssetUrl("images/logout.svg"), "html", null, true);
        echo "\" class=\"img-fluid mb-5\" alt=\"logout\">
                                        <h2 class=\"text-success\">Logout ?</h2>
                                        <p class=\"my-4\">Are you sure to want to Log out?</p>
                                        <div class=\"button-list\">
                                            <a href=\"";
        // line 145
        echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_logout");
        echo "\"><button type=\"button\" class=\"btn btn-danger font-16\"><i class=\"ri-check-line mr-2\"></i>Yes, I'm sure</button></a>
                                            <button type=\"button\" class=\"btn btn-success font-16\"><i class=\"ri-close-line mr-2\"></i>Cancel</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- My Logout End -->                            
            </div>                        
        </div>
        <!-- End col -->
    </div>
    <!-- End row -->                  
</div>
<!-- End Contentbar -->
 
<!-- Footer --> 
";
        // line 164
        $this->loadTemplate("site/footer-user.html.twig", "user/account.html.twig", 164)->display($context);
        // line 165
        echo "
";
        
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->leave($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof);

        
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->leave($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof);

    }

    public function getTemplateName()
    {
        return "user/account.html.twig";
    }

    public function isTraitable()
    {
        return false;
    }

    public function getDebugInfo()
    {
        return array (  311 => 165,  309 => 164,  287 => 145,  280 => 141,  261 => 124,  255 => 111,  248 => 107,  239 => 101,  232 => 97,  225 => 93,  207 => 78,  203 => 77,  197 => 76,  192 => 74,  158 => 42,  142 => 35,  139 => 34,  134 => 33,  130 => 32,  116 => 21,  106 => 13,  102 => 11,  99 => 9,  95 => 8,  91 => 6,  81 => 5,  59 => 3,  36 => 1,);
    }

    public function getSourceContext()
    {
        return new Source("{% extends 'base.html.twig' %}

{% block title %}Profile of {{ app.user.FirstName }}  {{ app.user.LastName }}{% endblock %}

{% block body %}

<!-- Header --> 
{% if is_granted('ROLE_ADMIN') %} 
    {% include 'site/header-admin.html.twig' %}
{% else %}
    {% include 'site/header-user.html.twig' %}
{% endif %}

<!-- Start Breadcrumbbar -->                    
<div class=\"breadcrumbbar\">
    <div class=\"row align-items-center\">
        <div class=\"col-md-12 col-lg-12\">
            <h4 class=\"page-title\">My Account</h4>
            <div class=\"breadcrumb-list\">
                <ol class=\"breadcrumb\">
                    <li class=\"breadcrumb-item\"><a href=\"{{ path('site') }}\">Home</a></li>
                    <li class=\"breadcrumb-item active\" aria-current=\"page\">My Account</li>
                </ol>
            </div>
        </div>
    </div>          
</div>
<!-- End Breadcrumbbar -->

<br>
<!-- Show errors -->
{% for label, messages in app.flashes %}
    {% for message in messages %}
        <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">
            {{ message }}
            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">
                <span aria-hidden=\"true\">&times;</span>
              </button>
        </div>
    {% endfor %}
{% endfor %}

<!-- Start Contentbar -->    
<div class=\"contentbar\">                
    <!-- Start row -->
    <div class=\"row\">
        <!-- Start col -->
        <div class=\"col-lg-5 col-xl-3\">
            <div class=\"card m-b-30\">
                <div class=\"card-header\">                                
                    <h5 class=\"card-title mb-0\">My Account</h5>
                </div>
                <div class=\"card-body\">
                    <div class=\"nav flex-column nav-pills\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">
                        <a class=\"nav-link mb-2 active\" id=\"v-pills-dashboard-tab\" data-toggle=\"pill\" href=\"#v-pills-dashboard\" role=\"tab\" aria-controls=\"v-pills-dashboard\" aria-selected=\"true\"><i class=\"ri-profile-fill mr-2\"></i>My profile</a>
                        <a class=\"nav-link mb-2\" id=\"v-pills-profile-tab\" data-toggle=\"pill\" href=\"#v-pills-profile\" role=\"tab\" aria-controls=\"v-pills-profile\" aria-selected=\"false\"><i class=\"ri-pencil-line mr-2\"></i>Edit Profile</a>
                        <a class=\"nav-link text-danger\" id=\"v-pills-logout-tab\" data-toggle=\"pill\" href=\"#v-pills-logout\" role=\"tab\" aria-controls=\"v-pills-logout\" aria-selected=\"false\"><i class=\"ri-shut-down-line mr-2\"></i>Logout</a>
                    </div>
                </div>
            </div>
        </div>
        <!-- End col -->
        <!-- Start col -->
        <div class=\"col-lg-7 col-xl-9\">
            <div class=\"tab-content\" id=\"v-pills-tabContent\">
                <!-- Dashboard Start -->
                <div class=\"tab-pane fade show active\" id=\"v-pills-dashboard\" role=\"tabpanel\" aria-labelledby=\"v-pills-dashboard-tab\">
                    <div class=\"card m-b-30\">
                        <div class=\"card-header\">                                
                            <h5 class=\"card-title mb-0\">Dashboard</h5>
                        </div>
                        <div class=\"card-body\">
                            <div class=\"profilebox py-4 text-center\">
                                <img src=\"{{asset('uploads/' ~ user.image )}}\" class=\"img-fluid mb-3\" alt=\"profile\">
                                <div class=\"profilename\">
                                    <h5>{{ app.user.FirstName }} {{app.user.LastName }}</h5>
                                    <p><b>Email:</b> {{ app.user.email }}</p>
                                    <p><b>Phone number:</b> {{ app.user.phone }}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Dashboard End -->

                <!-- My Profile Start -->
                <div class=\"tab-pane fade\" id=\"v-pills-profile\" role=\"tabpanel\" aria-labelledby=\"v-pills-profile-tab\">
                    <div class=\"card m-b-30\">
                        <div class=\"card-header\">                                
                            <h5 class=\"card-title mb-0\">Edit Profile Informations</h5>
                        </div>
                        <div class=\"card-body\">
                            <form method=\"POST\" action=\"{{ url('update_profile', {id:app.user.id}) }}\" enctype=\"multipart/form-data\">
                                <div class=\"form-row\">
                                    <div class=\"form-group col-md-6\">
                                        <label for=\"firstname\">First Name</label>
                                        <input type=\"text\" class=\"form-control\" id=\"firstname\" name=\"firstname\" value=\"{{ app.user.firstname }}\">
                                    </div>
                                    <div class=\"form-group col-md-6\">
                                        <label for=\"lastname\">Last Name</label>
                                        <input type=\"text\" class=\"form-control\" id=\"lastname\" name=\"lastname\" value=\"{{ app.user.lastname }}\">
                                    </div>
                                </div>
                                <div class=\"form-row\">
                                    <div class=\"form-group col-md-6\">
                                        <label for=\"phone\">Mobile Number</label>
                                        <input type=\"text\" class=\"form-control\" id=\"phone\" name=\"phone\" value=\"{{ app.user.phone }}\">
                                    </div>
                                    <div class=\"form-group col-md-6\">
                                        <label for=\"image\">Image</label>
                                        <input type=\"file\" class=\"form-control-file\" id=\"image\" name=\"image\" value=\"{{ app.user.image }}\">
                                    </div>
                                </div>
                                {# <div class=\"form-row\">
                                    <div class=\"form-group col-md-6\">
                                        <label for=\"password\">Password</label>
                                        <input type=\"password\" class=\"form-control\" id=\"password\">
                                    </div>
                                    <div class=\"form-group col-md-6\">
                                        <label for=\"confirmedpassword\">Confirmed Password</label>
                                        <input type=\"password\" class=\"form-control\" id=\"confirmedpassword\">
                                    </div>
                                </div> #}
                                <button type=\"submit\" class=\"btn btn-primary-rgba font-16\"><i class=\"ri-save-line mr-2\"></i>Update</button>
                            </form>
                        </div>
                    </div>
                </div>
                <!-- My Profile End -->

                <!-- My Logout Start -->
                <div class=\"tab-pane fade\" id=\"v-pills-logout\" role=\"tabpanel\" aria-labelledby=\"v-pills-logout-tab\">
                    <div class=\"card m-b-30\">
                        <div class=\"card-header\">                                
                            <h5 class=\"card-title mb-0\">Logout</h5>                                       
                        </div>
                        <div class=\"card-body\">
                            <div class=\"row justify-content-center\">
                                <div class=\"col-lg-6 col-xl-4\">
                                    <div class=\"logout-content text-center my-5\">
                                        <img src=\"{{ asset('images/logout.svg')}}\" class=\"img-fluid mb-5\" alt=\"logout\">
                                        <h2 class=\"text-success\">Logout ?</h2>
                                        <p class=\"my-4\">Are you sure to want to Log out?</p>
                                        <div class=\"button-list\">
                                            <a href=\"{{ path('app_logout') }}\"><button type=\"button\" class=\"btn btn-danger font-16\"><i class=\"ri-check-line mr-2\"></i>Yes, I'm sure</button></a>
                                            <button type=\"button\" class=\"btn btn-success font-16\"><i class=\"ri-close-line mr-2\"></i>Cancel</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- My Logout End -->                            
            </div>                        
        </div>
        <!-- End col -->
    </div>
    <!-- End row -->                  
</div>
<!-- End Contentbar -->
 
<!-- Footer --> 
{% include 'site/footer-user.html.twig' %}

{% endblock %}", "user/account.html.twig", "/Users/karlagergelova/Documents/CCI/crm/templates/user/account.html.twig");
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:80:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1";O:35:"phpDocumentor\Reflection\Php\Class_":12:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:80:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1";s:36:" phpDocumentor\Reflection\Fqsen name";s:79:"__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:14:"\Twig\Template";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"Template";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:2:{s:89:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::$source";O:37:"phpDocumentor\Reflection\Php\Property":10:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:89:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::$source";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"source";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";N;s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:18;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}s:89:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::$macros";O:37:"phpDocumentor\Reflection\Php\Property":10:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:89:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::$macros";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"macros";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:2:"[]";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:19;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:9:{s:95:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:95:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"env";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:17:"\Twig\Environment";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Environment";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:21;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:95:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::doGetParent()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:95:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::doGetParent()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"doGetParent";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:33;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:93:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::doDisplay()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:93:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::doDisplay()";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"doDisplay";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"blocks";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:39;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:95:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::block_title()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:95:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::block_title()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"block_title";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"blocks";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:59;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:94:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::block_body()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:94:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::block_body()";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"block_body";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"blocks";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:81;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:99:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::getTemplateName()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:99:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::getTemplateName()";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"getTemplateName";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:321;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:95:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::isTraitable()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:95:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::isTraitable()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"isTraitable";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:326;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:96:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::getDebugInfo()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:96:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::getDebugInfo()";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"getDebugInfo";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:331;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:100:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::getSourceContext()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:100:"\__TwigTemplate_0ce4756e47ce04818d8267f94787214b187e656a97afc4eeccbf99d1aafc8eb1::getSourceContext()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"getSourceContext";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:336;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:16;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";