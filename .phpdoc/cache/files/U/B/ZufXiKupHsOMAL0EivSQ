1678307518
waR3U4bTeM%3A247cb008d43c5004c4148f2a1283aeb5-52926b0cfc42c234d1db7c976dd21f6a
s:46744:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"52926b0cfc42c234d1db7c976dd21f6a";s:39:" phpDocumentor\Reflection\Php\File name";s:68:"9587c00c081140f83cb77d41b4b76f9cf31bbcb58a9dadcc9e8cbd0605e6c17d.php";s:39:" phpDocumentor\Reflection\Php\File path";s:90:"var/cache/dev/twig/95/9587c00c081140f83cb77d41b4b76f9cf31bbcb58a9dadcc9e8cbd0605e6c17d.php";s:41:" phpDocumentor\Reflection\Php\File source";s:20079:"<?php

use Twig\Environment;
use Twig\Error\LoaderError;
use Twig\Error\RuntimeError;
use Twig\Extension\SandboxExtension;
use Twig\Markup;
use Twig\Sandbox\SecurityError;
use Twig\Sandbox\SecurityNotAllowedTagError;
use Twig\Sandbox\SecurityNotAllowedFilterError;
use Twig\Sandbox\SecurityNotAllowedFunctionError;
use Twig\Source;
use Twig\Template;

/* site/header-admin.html.twig */
class __TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76 extends Template
{
    private $source;
    private $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->parent = false;

        $this->blocks = [
        ];
    }

    protected function doDisplay(array $context, array $blocks = [])
    {
        $macros = $this->macros;
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->enter($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "site/header-admin.html.twig"));

        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02 = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->enter($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "site/header-admin.html.twig"));

        // line 1
        echo "<!-- Start Leftbar -->
<div class=\"leftbar\">
    <!-- Start Sidebar -->
    <div class=\"sidebar\">
        <!-- Start Logobar -->
        <div class=\"logobar\">
            <a href=\"";
        // line 7
        echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("admin_home");
        echo "\" class=\"logo logo-large\"><img src=\"";
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\AssetExtension']->getAssetUrl("images/crm-logo-light.svg"), "html", null, true);
        echo "\" class=\"img-fluid\" alt=\"logo\"></a>
            <a href=\"";
        // line 8
        echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("admin_home");
        echo "\" class=\"logo logo-small\"><img src=\"";
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\AssetExtension']->getAssetUrl("images/crm-logo-light.svg"), "html", null, true);
        echo "\" class=\"img-fluid\" alt=\"logo\"></a>
        </div>
        <!-- End Logobar -->
        <!-- Start Navigationbar -->
        <div class=\"navigationbar\">
            <ul class=\"vertical-menu\">
                <li class=\"vertical-header\">Menu</li>
                <li>
                    <a href=\"";
        // line 16
        echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("admin_home");
        echo "\">
                        <i class=\"ri-dashboard-line\"></i><span>Dashboard</span>
                    </a>
                </li>
                
                <li>
                    <a href=\"";
        // line 22
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("account_admin", ["id" => twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 22, $this->source); })()), "user", [], "any", false, false, false, 22), "id", [], "any", false, false, false, 22)]), "html", null, true);
        echo "\">
                        <i class=\"ri-account-box-line\"></i><span>My Account</span>
                    </a>
                </li>
                <li>
                    <a href=\"";
        // line 27
        echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("admin_calendar");
        echo "\">
                      <i class=\"ri-calendar-event-fill\"></i><span>Calendar</span>
                    </a>
                </li>
                ";
        // line 40
        echo "                <li>
                    <a href=\"";
        // line 41
        echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("contact_admin");
        echo "\">
                      <i class=\"ri-contacts-book-line\"></i><span>Contacts</span>
                    </a>
                </li>
                <li>
                    <a href=\"";
        // line 46
        echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("company_admin");
        echo "\">
                      <i class=\"ri-file-list-3-line\"></i><span>Companies</span>
                    </a>
                </li>
                <li>
                    <a href=\"";
        // line 51
        echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("employees_admin");
        echo "\">
                      <i class=\"ri-contacts-fill\"></i><span>Employees</span>
                    </a>
                </li>                                        
            </ul>
        </div>
        <!-- End Navigationbar -->
    </div>
    <!-- End Sidebar -->
</div>
<!-- End Leftbar -->
<!-- Start Rightbar -->
<div class=\"rightbar\">
    <!-- Start Topbar Mobile -->
    <div class=\"topbar-mobile\">
        <div class=\"row align-items-center\">
            <div class=\"col-md-12\">
                <div class=\"mobile-logobar\">
                    <a href=\"";
        // line 69
        echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("admin_home");
        echo "\" class=\"mobile-logo\"><img src=\"";
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\AssetExtension']->getAssetUrl("images/crm-logo.svg"), "html", null, true);
        echo "\" class=\"img-fluid\" alt=\"logo\"></a>
                </div>
                <div class=\"mobile-togglebar\">
                    <ul class=\"list-inline mb-0\">
                        <li class=\"list-inline-item\">
                            <div class=\"topbar-toggle-icon\">
                                <a class=\"topbar-toggle-hamburger\" href=\"javascript:void();\">
                                    <span class=\"iconbar\">
                                        <i class=\"ri-more-fill menu-hamburger-horizontal\"></i>
                                        <i class=\"ri-more-2-fill menu-hamburger-vertical\"></i>
                                    </span>
                                 </a>
                             </div>
                        </li>
                        <li class=\"list-inline-item\">
                            <div class=\"menubar\">
                                <a class=\"menu-hamburger\" href=\"javascript:void();\">
                                    <span class=\"iconbar\">
                                        <i class=\"ri-menu-2-line menu-hamburger-collapse\"></i>
                                        <i class=\"ri-close-line menu-hamburger-close\"></i>
                                    </span>
                                 </a>
                             </div>
                        </li>                                
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- Start Topbar -->
    <div class=\"topbar\">
        <!-- Start row -->
        <div class=\"row align-items-center\">
            <!-- Start col -->
            <div class=\"col-md-12 align-self-center\">
                <div class=\"togglebar\">
                    <ul class=\"list-inline mb-0\">
                        <li class=\"list-inline-item\">
                            <div class=\"menubar\">
                                <a class=\"menu-hamburger\" href=\"javascript:void();\">
                                    <span class=\"iconbar\">
                                        <i class=\"ri-menu-2-line menu-hamburger-collapse\"></i><i class=\"ri-close-line menu-hamburger-close\"></i>
                                    </span>
                                 </a>
                             </div>
                        </li>
                    </ul>
                </div>
                <div class=\"infobar\">
                    <ul class=\"list-inline mb-0\">
                        <li class=\"list-inline-item\">
                            <div class=\"profilebar\">
                                <div class=\"dropdown\">
                                    <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" id=\"profilelink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">
                                    <img src=\"";
        // line 123
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\AssetExtension']->getAssetUrl(("uploads/" . twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 123, $this->source); })()), "user", [], "any", false, false, false, 123), "image", [], "any", false, false, false, 123))), "html", null, true);
        echo "\" class=\"img-fluid\" alt=\"profile\">
                                   
                                        <span class=\"live-icon\">
                                           Welcome ";
        // line 126
        echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 126, $this->source); })()), "user", [], "any", false, false, false, 126), "FirstName", [], "any", false, false, false, 126), "html", null, true);
        echo "
                                        </span>
                                    </a>
                                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"profilelink\">
                                        <a class=\"dropdown-item\" href=\"";
        // line 130
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("account", ["id" => twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 130, $this->source); })()), "user", [], "any", false, false, false, 130), "id", [], "any", false, false, false, 130)]), "html", null, true);
        echo "\"><i class=\"ri-user-6-line\"></i>My Profile</a>
                                        <a class=\"dropdown-item text-danger\" href=\"";
        // line 131
        echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_logout");
        echo "\"><i class=\"ri-shut-down-line\"></i>Logout</a>
                                    </div>
                                </div>
                            </div>                                   
                        </li>
                    </ul>
                </div>
            </div>
            <!-- End col -->
        </div> 
        <!-- End row -->
    </div>
    <!-- End Topbar -->

   ";
        
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->leave($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof);

        
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->leave($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof);

    }

    public function getTemplateName()
    {
        return "site/header-admin.html.twig";
    }

    public function isTraitable()
    {
        return false;
    }

    public function getDebugInfo()
    {
        return array (  210 => 131,  206 => 130,  199 => 126,  193 => 123,  134 => 69,  113 => 51,  105 => 46,  97 => 41,  94 => 40,  87 => 27,  79 => 22,  70 => 16,  57 => 8,  51 => 7,  43 => 1,);
    }

    public function getSourceContext()
    {
        return new Source("<!-- Start Leftbar -->
<div class=\"leftbar\">
    <!-- Start Sidebar -->
    <div class=\"sidebar\">
        <!-- Start Logobar -->
        <div class=\"logobar\">
            <a href=\"{{ path('admin_home') }}\" class=\"logo logo-large\"><img src=\"{{ asset('images/crm-logo-light.svg') }}\" class=\"img-fluid\" alt=\"logo\"></a>
            <a href=\"{{ path('admin_home') }}\" class=\"logo logo-small\"><img src=\"{{ asset('images/crm-logo-light.svg') }}\" class=\"img-fluid\" alt=\"logo\"></a>
        </div>
        <!-- End Logobar -->
        <!-- Start Navigationbar -->
        <div class=\"navigationbar\">
            <ul class=\"vertical-menu\">
                <li class=\"vertical-header\">Menu</li>
                <li>
                    <a href=\"{{ path('admin_home') }}\">
                        <i class=\"ri-dashboard-line\"></i><span>Dashboard</span>
                    </a>
                </li>
                
                <li>
                    <a href=\"{{ path('account_admin', { id:app.user.id }) }}\">
                        <i class=\"ri-account-box-line\"></i><span>My Account</span>
                    </a>
                </li>
                <li>
                    <a href=\"{{ path('admin_calendar') }}\">
                      <i class=\"ri-calendar-event-fill\"></i><span>Calendar</span>
                    </a>
                </li>
                {# <li>
                    <a href=\"javascript:void();\">
                        <i class=\"ri-contacts-book-line\"></i><span>Contacts</span><i class=\"ri-arrow-right-s-line\"></i>
                    </a>
                    <ul class=\"vertical-submenu\">
                        <li><a href=\"{{ path('contact') }}\">Contacts</a></li>
                        <li><a href=\"{{ path('company') }}\">Companies</a></li>
                    </ul>
                </li>    #}
                <li>
                    <a href=\"{{ path('contact_admin') }}\">
                      <i class=\"ri-contacts-book-line\"></i><span>Contacts</span>
                    </a>
                </li>
                <li>
                    <a href=\"{{ path('company_admin') }}\">
                      <i class=\"ri-file-list-3-line\"></i><span>Companies</span>
                    </a>
                </li>
                <li>
                    <a href=\"{{ path('employees_admin') }}\">
                      <i class=\"ri-contacts-fill\"></i><span>Employees</span>
                    </a>
                </li>                                        
            </ul>
        </div>
        <!-- End Navigationbar -->
    </div>
    <!-- End Sidebar -->
</div>
<!-- End Leftbar -->
<!-- Start Rightbar -->
<div class=\"rightbar\">
    <!-- Start Topbar Mobile -->
    <div class=\"topbar-mobile\">
        <div class=\"row align-items-center\">
            <div class=\"col-md-12\">
                <div class=\"mobile-logobar\">
                    <a href=\"{{ path('admin_home') }}\" class=\"mobile-logo\"><img src=\"{{ asset('images/crm-logo.svg') }}\" class=\"img-fluid\" alt=\"logo\"></a>
                </div>
                <div class=\"mobile-togglebar\">
                    <ul class=\"list-inline mb-0\">
                        <li class=\"list-inline-item\">
                            <div class=\"topbar-toggle-icon\">
                                <a class=\"topbar-toggle-hamburger\" href=\"javascript:void();\">
                                    <span class=\"iconbar\">
                                        <i class=\"ri-more-fill menu-hamburger-horizontal\"></i>
                                        <i class=\"ri-more-2-fill menu-hamburger-vertical\"></i>
                                    </span>
                                 </a>
                             </div>
                        </li>
                        <li class=\"list-inline-item\">
                            <div class=\"menubar\">
                                <a class=\"menu-hamburger\" href=\"javascript:void();\">
                                    <span class=\"iconbar\">
                                        <i class=\"ri-menu-2-line menu-hamburger-collapse\"></i>
                                        <i class=\"ri-close-line menu-hamburger-close\"></i>
                                    </span>
                                 </a>
                             </div>
                        </li>                                
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- Start Topbar -->
    <div class=\"topbar\">
        <!-- Start row -->
        <div class=\"row align-items-center\">
            <!-- Start col -->
            <div class=\"col-md-12 align-self-center\">
                <div class=\"togglebar\">
                    <ul class=\"list-inline mb-0\">
                        <li class=\"list-inline-item\">
                            <div class=\"menubar\">
                                <a class=\"menu-hamburger\" href=\"javascript:void();\">
                                    <span class=\"iconbar\">
                                        <i class=\"ri-menu-2-line menu-hamburger-collapse\"></i><i class=\"ri-close-line menu-hamburger-close\"></i>
                                    </span>
                                 </a>
                             </div>
                        </li>
                    </ul>
                </div>
                <div class=\"infobar\">
                    <ul class=\"list-inline mb-0\">
                        <li class=\"list-inline-item\">
                            <div class=\"profilebar\">
                                <div class=\"dropdown\">
                                    <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" id=\"profilelink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">
                                    <img src=\"{{ asset('uploads/' ~ app.user.image )}}\" class=\"img-fluid\" alt=\"profile\">
                                   
                                        <span class=\"live-icon\">
                                           Welcome {{ app.user.FirstName}}
                                        </span>
                                    </a>
                                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"profilelink\">
                                        <a class=\"dropdown-item\" href=\"{{ path('account', {id:app.user.id}) }}\"><i class=\"ri-user-6-line\"></i>My Profile</a>
                                        <a class=\"dropdown-item text-danger\" href=\"{{ path('app_logout') }}\"><i class=\"ri-shut-down-line\"></i>Logout</a>
                                    </div>
                                </div>
                            </div>                                   
                        </li>
                    </ul>
                </div>
            </div>
            <!-- End col -->
        </div> 
        <!-- End row -->
    </div>
    <!-- End Topbar -->

   ", "site/header-admin.html.twig", "/Users/karlagergelova/Documents/CCI/crm/templates/site/header-admin.html.twig");
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:80:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76";O:35:"phpDocumentor\Reflection\Php\Class_":12:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:80:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76";s:36:" phpDocumentor\Reflection\Fqsen name";s:79:"__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:14:"\Twig\Template";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"Template";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:2:{s:89:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76::$source";O:37:"phpDocumentor\Reflection\Php\Property":10:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:89:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76::$source";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"source";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";N;s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:18;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}s:89:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76::$macros";O:37:"phpDocumentor\Reflection\Php\Property":10:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:89:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76::$macros";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"macros";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:2:"[]";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:19;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:6:{s:95:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:95:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"env";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:17:"\Twig\Environment";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Environment";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:21;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:93:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76::doDisplay()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:93:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76::doDisplay()";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"doDisplay";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"blocks";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:33;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:99:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76::getTemplateName()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:99:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76::getTemplateName()";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"getTemplateName";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:234;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:95:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76::isTraitable()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:95:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76::isTraitable()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"isTraitable";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:239;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:96:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76::getDebugInfo()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:96:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76::getDebugInfo()";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"getDebugInfo";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:244;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:100:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76::getSourceContext()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:100:"\__TwigTemplate_4bdf952e0359363003af9346da2faae610b06facf19f30fb4db4db713c6dbe76::getSourceContext()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"getSourceContext";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:249;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:16;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";